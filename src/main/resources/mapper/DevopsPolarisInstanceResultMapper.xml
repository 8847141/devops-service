<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsPolarisInstanceResultMapper">
    <resultMap id="instanceWithResultMap" type="io.choerodon.devops.api.vo.InstanceWithPolarisResultVO">
        <result column="instance_id" property="instanceId"/>
        <result column="instance_code" property="instanceCode"/>
        <result column="instance_status" property="instanceStatus"/>
        <result column="app_service_code" property="appServiceCode"/>
        <result column="app_service_name" property="appServiceName"/>
        <result column="app_service_id" property="appServiceId"/>
        <result column="env_id" property="envId"/>
        <collection property="resultJson" ofType="java.lang.String" javaType="java.util.List" notNullColumn="detail_json">
            <result column="detail_json"/>
        </collection>
    </resultMap>

    <resultMap id="envWithResultMap" type="io.choerodon.devops.api.vo.DevopsEnvWithPolarisResultVO">
        <result property="envId" column="env_id"/>
        <result property="envName" column="env_name"/>
        <result property="namespace" column="namespace"/>
        <result property="internal" column="internal"/>
        <result property="projectId" column="project_id"/>
        <result property="checked" column="checked"/>
        <collection property="detailJson" ofType="java.lang.String" javaType="java.util.List" notNullColumn="detail">
            <result column="detail"/>
        </collection>
        <collection property="itemHasErrors" ofType="java.lang.Boolean" javaType="java.util.List" notNullColumn="item_has_errors">
            <result column="item_has_errors"/>
        </collection>
    </resultMap>

    <resultMap id="envWithoutResultMap" type="io.choerodon.devops.api.vo.DevopsEnvWithPolarisResultVO">
        <result property="envId" column="env_id"/>
        <result property="envName" column="env_name"/>
        <result property="namespace" column="namespace"/>
        <result property="projectId" column="project_id"/>
        <result property="checked" column="checked"/>
        <result property="internal" column="internal"/>
    </resultMap>

    <insert id="batchInsert">
        INSERT INTO devops_polaris_instance_result(env_id, instance_id, namespace, resource_name, resource_kind, record_id, detail_id, has_errors) VALUES
        <foreach collection="items" item="item" separator=",">
            (#{item.envId},#{item.instanceId},#{item.namespace},#{item.resourceName},#{item.resourceKind},#{item.recordId},#{item.detailId}, #{item.hasErrors})
        </foreach>
    </insert>

    <select id="queryInstanceWithResult" resultMap="instanceWithResultMap">
        SELECT
        dasi.env_id,
        dasi.id AS instance_id,
        dasi.code AS instance_code,
        dasi.status AS instance_status,
        das.id AS app_service_id,
        das.code AS app_service_code,
        das.name AS app_service_name,
        dprd.detail AS detail_json
        FROM devops_app_service_instance dasi
        LEFT JOIN devops_app_service das ON dasi.app_service_id = das.id
        LEFT JOIN devops_polaris_instance_result dpir ON dasi.id = dpir.instance_id AND dpir.record_id = #{recordId,jdbcType=BIGINT}
        LEFT JOIN devops_polaris_result_detail dprd ON dpir.detail_id = dprd.id
        WHERE dasi.env_id = #{envId,jdbcType=BIGINT}
    </select>

    <select id="queryEnvWithPolarisResult"
            resultMap="envWithResultMap">
        SELECT
        dpir.namespace AS namespace,
        de.name AS env_name,
        de.id AS env_id,
        dpir.has_errors AS has_errors,
        de.project_id AS project_id,
        (dpir.env_id is not null) AS internal,
        dprd.detail AS detail,
        dpir.has_errors as item_has_errors,
        TRUE AS checked
        FROM devops_polaris_instance_result dpir
        LEFT JOIN devops_env de ON dpir.env_id = de.id
        LEFT JOIN devops_polaris_result_detail dprd ON dpir.detail_id = dprd.id
        WHERE dpir.record_id = #{recordId,jdbcType=BIGINT}
        ORDER BY internal DESC
    </select>

    <select id="queryEnvWithoutPolarisResult" resultMap="envWithoutResultMap">
        SELECT
        de.code AS namespace,
        de.name AS env_name,
        de.id AS env_id,
        de.project_id AS project_id,
        FALSE AS checked,
        TRUE AS internal
        FROM devops_env de
        WHERE de.cluster_id = #{clusterId,jdbcType=BIGINT}
        AND de.type = 'user'
    </select>
</mapper>
