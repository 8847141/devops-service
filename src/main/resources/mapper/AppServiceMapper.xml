<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.AppServiceMapper">
    <select id="list" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
        da.id,
        da.app_id,
        da.name,
        da.code,
        da.type,
        da.is_active,
        da.is_synchro,
        da.gitlab_project_id,
        da.uuid,
        da.is_failed,
        da.is_skip_check_permission,
        da.creation_date
        FROM devops_app_service da
        where da.app_id = #{appId}
        <if test="isActive != null">
            <if test="isActive">
                AND da.is_active = TRUE
            </if>
            <if test="!isActive">
                AND da.is_active = FALSE
            </if>
        </if>
        <if test="type != null">
            AND da.type = #{type}
        </if>
        <if test="hasVersion != null">
            <if test="hasVersion">
                AND EXISTS ( SELECT 1 FROM devops_app_service_version dav WHERE dav.app_service_id = da.id )
            </if>
            <if test="!hasVersion">
                AND NOT EXISTS ( SELECT 1 FROM devops_app_service_version dav WHERE dav.app_service_id = da.id )
            </if>
        </if>
        <if test="appMarket != null">
            <if test="!appMarket">
                AND da.gitlab_project_id is NOT NULL
            </if>
        </if>
        <include refid="sqlparam"/>
        <if test="index !=''">
            ORDER BY da.is_active desc,
            (
            da.is_synchro = 1
            AND da.gitlab_project_id IS NOT NULL
            )
            OR da.is_synchro = 0 DESC,
            da.id desc
        </if>
    </select>

    <select id="listByAppId" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
        da.id,
        da.app_id,
        da. NAME,
        da. CODE,
        EXISTS (
        SELECT
        1
        FROM
        devops_app_service_version dasv
        WHERE
        dasv.app_service_id = da.id
        ) AS version
        FROM
        devops_app_service da
        WHERE
        da.app_id = #{appId}
        <include refid="sqlparam"/>
        ORDER BY
        version != 1,
        da.id DESC
    </select>

    <select id="listByEnvId" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT DISTINCT
        da.id,
        da.`code`,
        da.`name` ,
        dam.share_level,
        da.app_id app_id
        FROM
        devops_app_service da
        JOIN devops_app_service_instance dai ON dai.app_service_id = da.id
        JOIN devops_env de ON de.id = dai.env_id
        left join devops_app_service_share_rule dam on dam.app_service_id = da.id
        WHERE
        de.project_id = #{appId}
        AND de.id = #{envId}
        <if test="appServiceId!=null and appServiceId !=''">
            ORDER BY da.id not in (#{appServiceId}),da.id ASC
        </if>
    </select>

    <select id="listByActive" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
            da.*
        FROM
            devops_app_service da
        WHERE
            da.is_active is true
          AND da.is_synchro is true
          AND da.gitlab_project_id is not null
          AND da.app_id = #{appId}
    </select>

    <select id="listDeployedApp" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT DISTINCT
        dam.share_level publishLevel,
        da.*
        FROM
        devops_app_service da
        JOIN devops_app_service_instance dai ON dai.app_service_id = da.id
        AND dai.`status` != 'deleted'
        JOIN devops_env de ON dai.env_id = de.id
        LEFT JOIN devops_app_service_share_rule dam ON dam.app_service_id = da.id
        WHERE
        da.is_active
        AND de.project_id = #{appId}
        ORDER BY
        dam.share_level ASC,
        da.id DESC
    </select>

    <select id="listAll" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT DISTINCT
        dam.share_level publishLevel,
        da.*
        FROM
        devops_app_service da
        JOIN devops_app_service_instance dai ON dai.app_service_id = da.id
        AND dai.`status` != 'deleted'
        JOIN devops_env de ON dai.env_id = de.id
        LEFT JOIN devops_app_service_share_rule dam ON dam.app_service_id = da.id
        WHERE
        da.is_active
        AND de.project_id = #{appId}
        ORDER BY
        dam.share_level ASC,
        da.id DESC
    </select>

    <sql id="sqlparam">
        <if test='searchParam != null'>
            <if test='searchParam.code != null and searchParam.code.length > 0'>
                AND da.code LIKE CONCAT(CONCAT('%', #{searchParam.code, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.type != null'>
                AND
                <if test='searchParam.type == 0'>
                    da.type = 'normal'
                </if>
                <if test="searchParam.type == 1">
                    da.type = 'test'
                </if>
            </if>
            <if test='searchParam.name != null and searchParam.name.length > 0'>
                AND
                da.name LIKE CONCAT(CONCAT('%', #{searchParam.name, jdbcType=VARCHAR}),'%')
            </if>
            <if test='searchParam.active != null'>
                AND
                <if test='searchParam.active == -1'>
                    da.is_failed = 1
                </if>
                <if test="searchParam.active == 0">
                    da.is_active = 0
                </if>
                <if test="searchParam.active == 1">
                    da.is_active = 1
                    AND da.is_synchro = 1
                    AND (da.is_failed IS NULL OR is_failed=0)
                </if>
                <if test="searchParam.active == 2">
                    da.is_synchro = 0
                    AND (da.is_failed IS NULL OR is_failed=0)
                </if>
            </if>
        </if>
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (da.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR da.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                )
            </foreach>
        </if>
    </sql>

    <select id="basePageByActiveAndPubAndHasVersion" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
        da.`id`,
        da.`code`,
        da.`name`
        FROM
        devops_app_service da
        WHERE
        da.app_id = #{appId}
        AND da.is_active = #{active}
        AND ((select count(1) from devops_app_service_share_rule dam where da.id=dam.app_service_id)=0)
        AND ((select count(1) from devops_app_service_version dav where da.id=dav.app_service_id)>0)
        AND da.type = 'normal'
        <include refid="sqlparam"/>
    </select>

    <select id="queryByToken" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
        da.id,
        da.app_id,
        da.name,
        da.code,
        da.is_active,
        da.is_synchro,
        da.gitlab_project_id,
        da.harbor_config_id,
        da.chart_config_id,
        da.uuid,
        da.token,
        da.object_version_number
        FROM
        devops_app_service da
        WHERE
        da.token = #{token}
    </select>

    <select id="checkAppCanDisable" resultType="java.lang.Integer">
        SELECT
        count( 1 )
        FROM
        devops_app_service da
        WHERE
        NOT EXISTS ( SELECT 1 FROM devops_app_service_share_rule dam WHERE dam.app_service_id = da.id )
        AND NOT EXISTS ( SELECT 1 FROM devops_app_service_instance dai JOIN devops_app_service_version dav ON dav.id =
        dai.app_service_version_id WHERE dai.`status` != 'deleted' AND dav.app_service_id = da.id )
        AND da.id = #{appServiceId}
    </select>

    <select id="listByCode" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
        da.`id`,
        da.app_id
        FROM
        devops_app_service da
        JOIN devops_app_service_share_rule dam ON da.id = dam.app_service_id
        WHERE
        da.code = #{code}
    </select>

    <select id="listCodeRepository" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
        da.id,
        da.app_id,
        da.name,
        da.code,
        da.is_active,
        da.is_synchro,
        da.gitlab_project_id,
        da.is_skip_check_permission,
        da.uuid
        FROM
        devops_app_service da
        WHERE da.app_id = #{appId}
        AND da.is_active = 1
        AND da.gitlab_project_id IS NOT NULL
        <if test='isProjectOwner != null'>
            <if test='isProjectOwner == false'>
                AND (da.is_skip_check_permission = 1 OR (
                da.is_skip_check_permission = 0
                AND ( da.id IN ( SELECT daur.app_service_id FROM devops_app_service_user_rel daur WHERE daur.iam_user_id
                = #{userId}
                ))))
            </if>
        </if>
        <include refid="sqlparam"/>
    </select>

    <select id="listByGitLabProjectIds" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT da.gitlab_project_id
        FROM devops_app_service da
        WHERE da.gitlab_project_id IN
        <foreach collection="gitlabProjectIds" item="gitlabProjectId" open="(" close=")" separator=",">
            #{gitlabProjectId}
        </foreach>
    </select>


    <update id="updateAppToSuccess" parameterType="io.choerodon.devops.infra.dto.AppServiceDTO">
        UPDATE devops_app_service da set da.is_failed = null  where da.id = #{appServiceId}
    </update>

    <update id="updateApplicationStatus" parameterType="io.choerodon.devops.infra.dto.AppServiceDTO">
        UPDATE devops_app_service da
        set da.is_failed = null,
        da.token=#{token},
        da.gitlab_project_id=#{gitlabProjectId},
        da.hook_id=#{hookId},
        da.is_synchro=#{isSynchro}
        where da.id = #{appServiceId}
    </update>

    <update id="updateHarborConfig" parameterType="io.choerodon.devops.infra.dto.AppServiceDTO">
        UPDATE devops_app_service da
        <if test='harborPrivate != null'>
            <if test='harborPrivate == true'>
                set da.harbor_config_id = #{newConfigId}
                where (da.harbor_config_id = #{oldConfigId} or da.harbor_config_id is null)
            </if>
            <if test='harborPrivate == false'>
                set da.harbor_config_id = #{newConfigId}
                where da.harbor_config_id = #{oldConfigId}
            </if>
        </if>
        AND da.app_id = #{appId}
    </update>


    <update id="updateHarborConfigNullByConfigId">
        UPDATE devops_app_service da
        set da.harbor_config_id = null
        where da.harbor_config_id = #{harborConfigId}
    </update>

    <update id="updateChartConfigNullByConfigId">
        UPDATE devops_app_service da
        set da.chart_config_id = null
        where da.chart_config_id = #{chartConfigId}
    </update>


    <update id="updateHarborConfigNullByServiceId">
        UPDATE devops_app_service da
        set da.harbor_config_id = null
        where da.id = #{appServiceId}
    </update>

    <update id="updateChartConfigNullByServiceId">
        UPDATE devops_app_service da
        set da.chart_config_id = null
        where da.id = #{appServiceId}
    </update>

    <select id="queryByCodeWithNoProject" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
            da.*
        FROM
            devops_app_service da
        WHERE
            da.code = #{code}
          AND da.app_id is null
    </select>

    <select id="listShareApplicationService" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT
        da.id,
        da.`code`,
        da.`name`,
        da.app_id,
        da.chart_config_id,
        da.harbor_config_id
        FROM
        devops_app_service_share_rule dasr
        JOIN devops_app_service da ON da.id = dasr.app_service_id

        WHERE
        dasr.app_service_id in
        <foreach collection="appServiceIds" item="appServiceId" open="(" close=")" separator=",">
            #{appServiceId}
        </foreach>
        AND (
        dasr.share_level = 'organization'
        OR dasr.project_id = #{projectId}
        )
        <if test='params != null and params.size > 0'>
            AND
            <foreach collection="params" item="param" open="(" separator=" OR " close=")">
                (da.code LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
                OR da.name LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%') )
            </foreach>
        </if>
    </select>

    <select id="queryOrganizationShareApps" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
         SELECT DISTINCT
            das.id,
            das.app_id,
            das.`name`,
            das.CODE,
            das.type
        FROM
            devops_app_service das
            LEFT JOIN devops_app_service_share_rule b ON das.id = b.app_service_id
        WHERE
          das.app_id is not null and b.app_service_id is not null
    </select>

    <select id="queryMarketDownloadApps" resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
        SELECT DISTINCT
            das.id,
            das.app_id,
            das.`name`,
            das.CODE,
            das.type
        FROM
            devops_app_service das
            LEFT JOIN devops_project db ON das.app_id = db.app_id
        WHERE
            das.app_id IS NOT NULL
            AND db.iam_project_id IS NULL
            AND db.app_id IS NOT NULL
    </select>

    <select id="ListShareProjectApps"  resultType="io.choerodon.devops.infra.dto.AppServiceDTO">
      SELECT DISTINCT
        das.id,
        das.app_id,
        das.`name`,
        das.CODE,
        das.type
    FROM
        devops_app_service das
        LEFT JOIN (
    SELECT
        dassr.app_service_id,
        dasr.project_id
    FROM
        devops_app_service_share_rule dassr
        LEFT JOIN devops_app_service_share_resource dasr ON dassr.id = dasr.share_id
    WHERE
        dassr.share_level = 'project'
        AND dasr.project_id = #{projectId}
        ) bb ON das.id = bb.app_service_id
    WHERE
        bb.app_service_id IS NOT NULL
    </select>
</mapper>
